diff --git a/scidb4py/_scidb_msg.proto b/scidb4py/_scidb_msg.proto
index 632a278..a58cd19 100644
--- a/scidb4py/_scidb_msg.proto
+++ b/scidb4py/_scidb_msg.proto
@@ -122,11 +122,6 @@ message QueryResult
             required int64 end_max = 5;
             required uint32 chunk_interval = 6;
             required uint32 chunk_overlap = 7;
-            required string type_id = 8;
-            required int32 flags = 9;
-            required string mapping_array_name = 10;
-            optional int64 coordinates_mapping_size = 11;
-            optional bytes coordinates_mapping = 12;
 	}
 
     message Warning
diff --git a/scidb4py/array.py b/scidb4py/array.py
index d83b489..8a1fa95 100644
--- a/scidb4py/array.py
+++ b/scidb4py/array.py
@@ -34,39 +34,8 @@ class Array(object):
         self._attributes_name_id_mapping = {}
         for a in self.schema.attributes:
             self._attributes_name_id_mapping[a.name] = a.id
-
-        self._nid_mapping = {}
-        for d in self.schema.dimensions:
-            if d.type != TID_INT64:
-                if is_scidb_type(d.type):
-                    label_attr = 'value'
-                    attributes = [
-                        Attribute(0, 'value', d.type, 0),
-                    ]
-                else:
-                    label_attr = 'label'
-                    attributes = [
-                        Attribute(0, 'value', TID_VOID, 0),
-                        Attribute(1, 'label', TID_STRING, 0)
-                    ]
-
-                dimensions = [Dimension('no', TID_INT64, 0, d.start, d.start + d.coordinates_mapping_size - 1, d.coordinates_mapping_size)]
-                mapping_array = Array(query_id,
-                                      Schema(d.mapping_array_name,
-                                             attributes,
-                                             dimensions
-                                             ),
-                                      network)
-                mapping = []
-                for dim, att in mapping_array:
-                    mapping.append({dim['no']: att[label_attr]})
-                self._nid_mapping[d.name] = mapping
-
         self.next_chunk()
 
-    def nid_mapping(self, dimension):
-        return self._nid_mapping[dimension]
-
     def next_chunk(self):
         """
         Fetch new chunks for each attribute
diff --git a/scidb4py/result.py b/scidb4py/result.py
index c3795ef..6717b93 100644
--- a/scidb4py/result.py
+++ b/scidb4py/result.py
@@ -36,14 +36,9 @@ class Result(object):
                 dimensions.append(
                     Dimension(
                         d.name,
-                        d.type_id,
-                        d.flags,
                         d.start_min,
                         d.end_max,
-                        d.chunk_interval,
-                        d.mapping_array_name,
-                        d.coordinates_mapping_size,
-                        d.coordinates_mapping
+                        d.chunk_interval
                     )
                 )
             self._schema = Schema(array_name, attributes, dimensions)
diff --git a/scidb4py/schema.py b/scidb4py/schema.py
index b4a03d7..bf66673 100644
--- a/scidb4py/schema.py
+++ b/scidb4py/schema.py
@@ -15,6 +15,7 @@ Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
 Copyright (c) 2013, Artyom Smirnov <artyom_smirnov@icloud.com>
 """
 
+from types import TID_INT64
 
 class Attribute(object):
     def __init__(self, att_id, name, type_id, flags):
@@ -74,21 +75,15 @@ class Attribute(object):
 
 
 class Dimension(object):
-    def __init__(self, name, type_id, flags, start, end, chunk_interval,
-                 mapping_array_name=None, coordinates_mapping_size=0, coordinates_mapping=None):
+    def __init__(self, name, start, end, chunk_interval):
         """
         :param name: Dimension name
         :param type_id: Dimension type
         """
         self._name = name
-        self._type_id = type_id
-        self._flags = flags
         self._start = start
         self._end = end
         self._chunk_interval = chunk_interval
-        self._mapping_array_name = mapping_array_name
-        self._coordinates_mapping_size = coordinates_mapping_size
-        self._coordinates_mapping = coordinates_mapping
 
     @property
     def name(self):
@@ -108,11 +103,7 @@ class Dimension(object):
         :rtype : str
         :return: dimension type
         """
-        return self._type_id
-
-    @property
-    def flags(self):
-        return self._flags
+        return TID_INT64
 
     @property
     def start(self):
@@ -126,18 +117,6 @@ class Dimension(object):
     def chunk_interval(self):
         return self._chunk_interval
 
-    @property
-    def mapping_array_name(self):
-        return self._mapping_array_name
-
-    @property
-    def coordinates_mapping_size(self):
-        return self._coordinates_mapping_size
-
-    @property
-    def coordinates_mapping(self):
-        return self._coordinates_mapping
-
     def __str__(self):
         return self.name + '(' + self.type + ')'
 
